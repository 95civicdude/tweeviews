function postReview(clientInfo, reviewData){
  	var bvsubmit = require('bvsubmit');

  	var reviewDataObject = {
  		rating: reviewData.rating,
  		reviewtext: reviewData.reviewtext, 
  		usernickname: reviewData.usernickname,
  		location: reviewData.location
  	};

  	var postString = bvsubmit.buildQuery(clientInfo, 'stg', reviewData);
  	console.log("Posting Query String: ", postString);

  	bvsubmit.submitQuery(postString, reviewDataObject);
}

function buildQuery(client, env, reviewData) {
	var querystring = require('querystring');

	var currentDate = new Date();
	currentDate = currentDate.toISOString().split('T')[0];
	var userToken = generateUserToken(client.encodingKey, 'userid=' + reviewData.userid + '&date='+currentDate+'&maxage=300&username='+reviewData.usernickname);
	var postURL = "http://" + (env=="stg"?"stg.":"") + "api.bazaarvoice.com/data/submitreview.json?ApiVersion=5.4&action=submit&ProductId="+reviewData.productid+"&PassKey="+client.apiKey+"&User="+userToken;
	return postURL;
}

function submitQuery(queryString, reviewData){
	var request = require('request');

	request.post({
		headers: {'content-type' : 'application/x-www-form-urlencoded'},
		url:     queryString,
		form:    reviewData
	}, function(error, response, body){
		console.log(error);
		console.log(body);
	});
}

function generateUserToken(encodingKey, userParamString) {
	var crypto = require('crypto');
	var sharedEncodingKey = encodingKey;

	var hex = new Buffer(userParamString).toString('hex');
	var md5Hash = crypto.createHash('md5').update(sharedEncodingKey + userParamString).digest('hex');

	return md5Hash + hex;
}

module.exports = {
	postReview: postReview,
	buildQuery: buildQuery,
	submitQuery: submitQuery,
	generateUserToken: generateUserToken
};