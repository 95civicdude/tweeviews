var photoUpload = require('./photoUpload');

function postReview(clientInfo, reviewData){
	var bvsubmit = require('bvsubmit');

	var reviewDataObject = {
		rating: reviewData.rating,
		reviewtext: reviewData.reviewtext, 
		usernickname: reviewData.usernickname,
		location: reviewData.location,
		photourl_1: reviewData.photourl_1.replace('_normal', ''),
		avatar: "photourl_1",
	};

	if(reviewDataObject.photourl_1){ //this is the avatar picture
		console.log("Start BV review submission with avatar photo: ", reviewDataObject.photourl_1);
		photoQuery = photoUpload.buildPhotoQuery(clientInfo.apiKey, 'stg', reviewDataObject.photourl_1);
		console.log("Uploading photo to BV with query:", photoQuery);
		photoUpload.submitPhoto(photoQuery, function(response){
			console.log("BV Photo response:", response);
			if(response && response.Photo && response.Photo.Sizes && response.Photo.Sizes.normal){
				var bvPhotoUrl = response.Photo.Sizes.normal.Url;
				console.log("Fetched BV Photo Url: " + bvPhotoUrl);
				reviewDataObject.photourl_1 = bvPhotoUrl;
			}
			
			var postString = bvsubmit.buildQuery(clientInfo, 'stg', reviewDataObject);
			console.log("Posting Query String: ", postString);

			bvsubmit.submitQuery(postString, reviewDataObject);
		});
	} else {
		console.log("Start BV review submission");
		var postString = bvsubmit.buildQuery(clientInfo, 'stg', reviewDataObject);
		console.log("Posting Query String: ", postString);

		bvsubmit.submitQuery(postString, reviewDataObject);
	}
}

function buildQuery(client, env, reviewData) {
	var querystring = require('querystring');

	var currentDate = new Date();
	currentDate = currentDate.toISOString().split('T')[0];
	var userToken = generateUserToken(client.encodingKey, 'userid=' + reviewData.userid + '&date='+currentDate+'&maxage=300&username='+reviewData.usernickname);
	var postURL = "http://" + (env=="stg"?"stg.":"") + "api.bazaarvoice.com/data/submitreview.json?ApiVersion=5.4&action=submit&ProductId="+reviewData.productid+"&PassKey="+client.apiKey+"&User="+userToken+"&CampaignId=tweeviews";
	return postURL;
}

function submitQuery(queryString, reviewData){
	var request = require('request');

	request.post({
		headers: {'content-type' : 'application/x-www-form-urlencoded'},
		url: queryString,
		form: reviewData
	}, function(error, response, body){
		console.log(error);
		console.log(JSON.parse(body));
	});
}

function generateUserToken(encodingKey, userParamString) {
	var crypto = require('crypto');
	var sharedEncodingKey = encodingKey;

	var hex = new Buffer(userParamString).toString('hex');
	var md5Hash = crypto.createHash('md5').update(sharedEncodingKey + userParamString).digest('hex');

	return md5Hash + hex;
}

module.exports = {
	postReview: postReview,
	buildQuery: buildQuery,
	submitQuery: submitQuery,
	generateUserToken: generateUserToken,
	buildPhotoQuery: photoUpload.buildPhotoQuery,
	submitPhoto: photoUpload.submitPhoto
};